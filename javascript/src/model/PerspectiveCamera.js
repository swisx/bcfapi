/**
 * BCFAPI
 * A BCF API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Direction from './Direction';
import Point from './Point';





/**
* The PerspectiveCamera model module.
* @module model/PerspectiveCamera
* @version 1.0.0
*/
export default class PerspectiveCamera {
    /**
    * Constructs a new <code>PerspectiveCamera</code>.
    * @alias module:model/PerspectiveCamera
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>PerspectiveCamera</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PerspectiveCamera} obj Optional instance to populate.
    * @return {module:model/PerspectiveCamera} The populated <code>PerspectiveCamera</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerspectiveCamera();

            
            
            

            if (data.hasOwnProperty('camera_view_point')) {
                obj['camera_view_point'] = Point.constructFromObject(data['camera_view_point']);
            }
            if (data.hasOwnProperty('camera_direction')) {
                obj['camera_direction'] = Direction.constructFromObject(data['camera_direction']);
            }
            if (data.hasOwnProperty('camera_up_vector')) {
                obj['camera_up_vector'] = Direction.constructFromObject(data['camera_up_vector']);
            }
            if (data.hasOwnProperty('field_of_view')) {
                obj['field_of_view'] = ApiClient.convertToType(data['field_of_view'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {module:model/Point} camera_view_point
    */
    camera_view_point = undefined;
    /**
    * @member {module:model/Direction} camera_direction
    */
    camera_direction = undefined;
    /**
    * @member {module:model/Direction} camera_up_vector
    */
    camera_up_vector = undefined;
    /**
    * @member {Number} field_of_view
    */
    field_of_view = undefined;








}


