/**
 * BCFAPI
 * A BCF API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import BitmapGET from './BitmapGET';
import ClippingPlane from './ClippingPlane';
import Components from './Components';
import Line from './Line';
import OrthogonalCamera from './OrthogonalCamera';
import PerspectiveCamera from './PerspectiveCamera';
import SnapshotGET from './SnapshotGET';





/**
* The ViewpointPOST model module.
* @module model/ViewpointPOST
* @version 1.0.0
*/
export default class ViewpointPOST {
    /**
    * Constructs a new <code>ViewpointPOST</code>.
    * @alias module:model/ViewpointPOST
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ViewpointPOST</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ViewpointPOST} obj Optional instance to populate.
    * @return {module:model/ViewpointPOST} The populated <code>ViewpointPOST</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ViewpointPOST();

            
            
            

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('orthogonal_camera')) {
                obj['orthogonal_camera'] = OrthogonalCamera.constructFromObject(data['orthogonal_camera']);
            }
            if (data.hasOwnProperty('perspective_camera')) {
                obj['perspective_camera'] = PerspectiveCamera.constructFromObject(data['perspective_camera']);
            }
            if (data.hasOwnProperty('lines')) {
                obj['lines'] = ApiClient.convertToType(data['lines'], [Line]);
            }
            if (data.hasOwnProperty('clipping_planes')) {
                obj['clipping_planes'] = ApiClient.convertToType(data['clipping_planes'], [ClippingPlane]);
            }
            if (data.hasOwnProperty('bitmaps')) {
                obj['bitmaps'] = ApiClient.convertToType(data['bitmaps'], [BitmapGET]);
            }
            if (data.hasOwnProperty('snapshot')) {
                obj['snapshot'] = SnapshotGET.constructFromObject(data['snapshot']);
            }
            if (data.hasOwnProperty('components')) {
                obj['components'] = Components.constructFromObject(data['components']);
            }
        }
        return obj;
    }

    /**
    * @member {Number} index
    */
    index = undefined;
    /**
    * @member {String} guid
    */
    guid = undefined;
    /**
    * @member {module:model/OrthogonalCamera} orthogonal_camera
    */
    orthogonal_camera = undefined;
    /**
    * @member {module:model/PerspectiveCamera} perspective_camera
    */
    perspective_camera = undefined;
    /**
    * @member {Array.<module:model/Line>} lines
    */
    lines = undefined;
    /**
    * @member {Array.<module:model/ClippingPlane>} clipping_planes
    */
    clipping_planes = undefined;
    /**
    * @member {Array.<module:model/BitmapGET>} bitmaps
    */
    bitmaps = undefined;
    /**
    * @member {module:model/SnapshotGET} snapshot
    */
    snapshot = undefined;
    /**
    * @member {module:model/Components} components
    */
    components = undefined;








}


