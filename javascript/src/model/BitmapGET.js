/**
 * BCFAPI
 * A BCF API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Direction from './Direction';
import Location from './Location';





/**
* The BitmapGET model module.
* @module model/BitmapGET
* @version 1.0.0
*/
export default class BitmapGET {
    /**
    * Constructs a new <code>BitmapGET</code>.
    * @alias module:model/BitmapGET
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>BitmapGET</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BitmapGET} obj Optional instance to populate.
    * @return {module:model/BitmapGET} The populated <code>BitmapGET</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BitmapGET();

            
            
            

            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('bitmap_type')) {
                obj['bitmap_type'] = ApiClient.convertToType(data['bitmap_type'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('normal')) {
                obj['normal'] = Direction.constructFromObject(data['normal']);
            }
            if (data.hasOwnProperty('up')) {
                obj['up'] = Direction.constructFromObject(data['up']);
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {String} guid
    */
    guid = undefined;
    /**
    * @member {module:model/BitmapGET.BitmapTypeEnum} bitmap_type
    */
    bitmap_type = undefined;
    /**
    * @member {module:model/Location} location
    */
    location = undefined;
    /**
    * @member {module:model/Direction} normal
    */
    normal = undefined;
    /**
    * @member {module:model/Direction} up
    */
    up = undefined;
    /**
    * @member {Number} height
    */
    height = undefined;






    /**
    * Allowed values for the <code>bitmap_type</code> property.
    * @enum {String}
    * @readonly
    */
    static BitmapTypeEnum = {
    
        /**
         * value: "jpg"
         * @const
         */
        "jpg": "jpg",
    
        /**
         * value: "png"
         * @const
         */
        "png": "png"    
    };



}


